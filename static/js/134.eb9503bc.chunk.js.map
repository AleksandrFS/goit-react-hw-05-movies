{"version":3,"file":"static/js/134.eb9503bc.chunk.js","mappings":"oKAoBA,IAlBmB,SAAC,GAAgB,IAAdA,EAAa,EAAbA,OACdC,GAAWC,EAAAA,EAAAA,MAEjB,OACE,0BACE,wBACGF,EAAOG,KAAI,SAAAC,GACV,OACE,SAAC,KAAD,CAAqBC,GAAE,kBAAaD,EAAME,IAAMC,MAAO,CAAEC,KAAOP,GAAhE,UACE,wBAAKG,EAAMK,SADFL,EAAME,GAIpB,OAIR,C,+LChBKI,EAAU,mCAEVC,EAAS,sCAEFC,EAAqB,mCAAG,oGACVC,EAAAA,EAAAA,IAAA,UAJN,4DAIM,OAA4BH,IADlB,cAC7BI,EAD6B,yBAG5BA,EAAWC,KAAKC,SAHY,2CAAH,qDAMrBC,EAAQ,mCAAG,WAAMC,GAAN,uFACGL,EAAAA,EAAAA,IAAA,UACpBF,GADoB,OACRO,EADQ,oBACWR,IAFd,cAChBI,EADgB,yBAIfA,EAAWC,MAJI,2CAAH,sDAORI,EAAe,mCAAG,WAAMD,GAAN,uFACJL,EAAAA,EAAAA,IAAA,UACpBF,GADoB,OACRO,EADQ,4BACmBR,IAFf,cACvBI,EADuB,yBAItBA,EAAWC,MAJW,2CAAH,sDAQfK,EAAe,mCAAG,WAAMF,GAAN,uFACJL,EAAAA,EAAAA,IAAA,UACpBF,GADoB,OACRO,EADQ,4BACmBR,IAFf,cACvBI,EADuB,OAI7BO,QAAQC,IAAIR,EAAWC,KAAKC,SAJC,kBAKtBF,EAAWC,KAAKC,SALM,2CAAH,sDAQfO,EAAa,mCAAG,WAAMC,GAAN,uFACFX,EAAAA,EAAAA,IAAA,0DAC4BW,EAD5B,oBAC6Cd,IAF3C,cACrBI,EADqB,yBAIpBA,EAAWC,KAAKC,SAJI,2CAAH,qD,iHCiC1B,UA/De,WACb,OAAwBS,EAAAA,EAAAA,UAAS,IAAjC,eAAOV,EAAP,KAAaW,EAAb,KAGA,GAAkCD,EAAAA,EAAAA,UAAS,IAA3C,eAAOE,EAAP,KAAkBC,EAAlB,KAEA,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KAqCA,OAhBAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAY,mCAAG,kGAEXC,EAAOJ,EAAaK,IAAI,SAFb,kEAOOZ,EAAAA,EAAAA,IAAcW,GAPrB,OAOXP,EAPW,OAQjBC,EAAaD,GACbD,EAAQ,IATS,4GAAH,qDAYlBO,GACD,GAAE,CAACH,KAGF,iCACE,kBAAMM,SArCa,SAAAC,GACrBA,EAAEC,iBAEGvB,GAGLgB,EAAgB,CAAEP,MAAM,GAAD,OAAKT,IAE7B,EA6BG,WACE,kBACEwB,KAAK,OACLC,aAAa,MACbC,WAAS,EACTC,MAAO3B,EACP4B,SAjCgB,SAAAN,GACtB,IAAQK,EAAUL,EAAEO,OAAZF,MAKRhB,EAAQgB,EACT,KA4BK,mBAAQH,KAAK,SAAb,UACE,0CAIHT,IAAgB,SAAC,IAAD,CAAY9B,OAAQ2B,MAG1C,C","sources":["components/MoviesList.jsx","fetchFilmsUtils/fetchFilmData.js","pages/Movies.jsx"],"sourcesContent":["import { Link, useLocation } from 'react-router-dom';\n\nconst MoviesList = ({ movies }) => {\n  const location = useLocation();\n \n  return (\n    <div>\n      <ul>\n        {movies.map(movie => {\n          return (\n            <Link key={movie.id} to={`/movies/${movie.id}`} state={{ from:  location}}>\n              <li>{movie.title}</li>\n            </Link>\n          );\n        })}\n      </ul>\n    </div>\n  );\n};\n\nexport default MoviesList;\n","import axios from 'axios';\n\nconst API_KEY = '7b4562665a42dd00b8be25ed9e213510';\nconst URL_TRENDING = 'https://api.themoviedb.org/3/trending/movie/day?api_key=';\nconst URL_MOVIE = `https://api.themoviedb.org/3/movie/`;\n\nexport const getMoviesListTrending = async () => {\n  const resultData = await axios.get(`${URL_TRENDING}${API_KEY}`);\n\n  return resultData.data.results;\n};\n\nexport const getMovie = async movieId => {\n  const resultData = await axios.get(\n    `${URL_MOVIE}${movieId}?api_key=${API_KEY}`\n  );\n  return resultData.data;\n};\n\nexport const getMovieCredits = async movieId => {\n  const resultData = await axios.get(\n    `${URL_MOVIE}${movieId}/credits?api_key=${API_KEY}`\n  );\n  return resultData.data;\n};\n\n\nexport const getMovieReviews = async movieId => {\n  const resultData = await axios.get(\n    `${URL_MOVIE}${movieId}/reviews?api_key=${API_KEY}`\n  );\n  console.log(resultData.data.results);\n  return resultData.data.results;\n}\n\nexport const getMoviesList = async query => {\n  const resultData = await axios.get(\n    `https://api.themoviedb.org/3/search/movie?query=${query}&api_key=${API_KEY}`\n  );\n  return resultData.data.results;\n}\n\n","import { useEffect, useState } from 'react';\nimport { getMoviesList } from 'fetchFilmsUtils/fetchFilmData';\nimport MoviesList from 'components/MoviesList';\nimport { useSearchParams } from 'react-router-dom';\n\nconst Movies = () => {\n  const [data, setData] = useState('');\n  // const [error, setError] = useState('');\n  // const [error, setError] = useState('');\n  const [movieList, setMovieList] = useState([]);\n\n  const [searchParams, setSearchParams] = useSearchParams();\n\n  const handleInputAdd = e => {\n    e.preventDefault();\n\n    if (!data) {\n      return;\n    }\n    setSearchParams({ query: `${data}` });\n    // setData('');\n  };\n\n  const setControlInput = e => {\n    const { value } = e.target;\n    // if (value === '') {\n    //   setSearchParams({});\n    // }\n\n    setData(value);\n  };\n\n  useEffect(() => {\n    const getFilmsList = async () => {\n      try {\n        const name = searchParams.get('query');\n        if (!name) {\n          return;\n        }\n\n        const movieList = await getMoviesList(name);\n        setMovieList(movieList);\n        setData('');\n      } catch (error) {}\n    };\n    getFilmsList();\n  }, [searchParams]);\n\n  return (\n    <>\n      <form onSubmit={handleInputAdd}>\n        <input\n          type=\"text\"\n          autoComplete=\"off\"\n          autoFocus\n          value={data}\n          onChange={setControlInput}\n        />\n        <button type=\"submit\">\n          <span>Search</span>\n        </button>\n      </form>\n\n      {searchParams && <MoviesList movies={movieList} />}\n    </>\n  );\n};\n\nexport default Movies;\n"],"names":["movies","location","useLocation","map","movie","to","id","state","from","title","API_KEY","URL_MOVIE","getMoviesListTrending","axios","resultData","data","results","getMovie","movieId","getMovieCredits","getMovieReviews","console","log","getMoviesList","query","useState","setData","movieList","setMovieList","useSearchParams","searchParams","setSearchParams","useEffect","getFilmsList","name","get","onSubmit","e","preventDefault","type","autoComplete","autoFocus","value","onChange","target"],"sourceRoot":""}