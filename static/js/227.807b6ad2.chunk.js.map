{"version":3,"file":"static/js/227.807b6ad2.chunk.js","mappings":"+SAEMA,EAAU,mCAEVC,EAAS,sCAEFC,EAAqB,mCAAG,oGACVC,EAAAA,EAAAA,IAAA,UAJN,4DAIM,OAA4BH,IADlB,cAC7BI,EAD6B,yBAG5BA,EAAWC,KAAKC,SAHY,2CAAH,qDAMrBC,EAAQ,mCAAG,WAAMC,GAAN,uFACGL,EAAAA,EAAAA,IAAA,UACpBF,GADoB,OACRO,EADQ,oBACWR,IAFd,cAChBI,EADgB,yBAIfA,EAAWC,MAJI,2CAAH,sDAORI,EAAe,mCAAG,WAAMD,GAAN,uFACJL,EAAAA,EAAAA,IAAA,UACpBF,GADoB,OACRO,EADQ,4BACmBR,IAFf,cACvBI,EADuB,yBAItBA,EAAWC,MAJW,2CAAH,sDAOfK,EAAe,mCAAG,WAAMF,GAAN,uFACJL,EAAAA,EAAAA,IAAA,UACpBF,GADoB,OACRO,EADQ,4BACmBR,IAFf,cACvBI,EADuB,yBAItBA,EAAWC,KAAKC,SAJM,2CAAH,sDAOfK,EAAa,mCAAG,WAAMC,GAAN,uFACFT,EAAAA,EAAAA,IAAA,0DAC4BS,EAD5B,oBAC6CZ,IAF3C,cACrBI,EADqB,yBAIpBA,EAAWC,KAAKC,SAJI,2CAAH,qD,uJCA1B,EA9ByB,SAAC,GAAmB,IAAD,IAAhBO,EAAgB,EAAhBA,UAClBC,EAAuDD,EAAvDC,OAAQC,EAA+CF,EAA/CE,MAAOC,EAAwCH,EAAxCG,SAAUC,EAA8BJ,EAA9BI,aAAcC,EAAgBL,EAAhBK,YAE/C,OACE,+BACE,4BACE,yBACGA,GACC,gBACEC,IAAG,yCAAoCD,GACvCE,IAAI,kBAGN,SAAC,MAAD,CAAgBC,MAAO,CAAEC,OAAQ,IAAKC,MAAO,UAGjD,4BACE,+BAAKR,QAAL,IAAKA,EAAAA,EAAS,MACd,yBAAG,eAAH,UAAgBS,KAAKC,MAAqB,GAAfR,UAA3B,QAAiD,GAAG,QACpD,4BACE,uBAAG,cACH,8BAAID,QAAJ,IAAIA,EAAAA,EAAY,MAChB,iCAAIF,EAAOY,KAAI,qBAAGC,IAAH,IAAoBC,KAAK,YAAxC,QAAgD,eAM3D,E,iBCoBD,EA7CqB,WAAO,IAAD,IACzB,GAA0BC,EAAAA,EAAAA,UAAS,MAAnC,eAAOC,EAAP,KAAcC,EAAd,KACA,GAA0BF,EAAAA,EAAAA,UAAS,IAAnC,eAAOG,EAAP,KAAcC,EAAd,KACQzB,GAAY0B,EAAAA,EAAAA,MAAZ1B,QACF2B,GAAWC,EAAAA,EAAAA,MACXC,GAAmBC,EAAAA,EAAAA,QAAM,oBAACH,EAASI,aAAV,aAAC,EAAgBC,YAAjB,QAAyB,KAgBxD,OAdAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAY,mCAAG,8GAEOnC,EAAAA,EAAAA,IAASC,GAFhB,OAEXK,EAFW,OAIjBkB,EAASlB,GAJQ,gDAMjBoB,EAAS,EAAD,IANS,yDAAH,qDAUlBS,GACD,GAAE,CAAClC,KAGF,iCACE,SAAC,KAAD,CAAMmC,GAAIN,EAAiBO,QAA3B,UACE,4BAAQ,cAETZ,IAAS,uBAAG,wBACZF,IAAS,SAAC,EAAD,CAAkBjB,UAAWiB,KACvC,iCACE,2BACE,yBACE,SAAC,KAAD,CAAMa,GAAG,OAAT,SAAgB,YAElB,yBACE,SAAC,KAAD,CAAMA,GAAG,UAAT,SAAmB,kBAGvB,SAAC,EAAAE,SAAD,CAAUC,UAAU,SAAC,IAAD,IAApB,UACE,SAAC,KAAD,WAKT,C","sources":["fetchFilmsUtils/fetchFilmData.js","components/MovieDescrirtion.jsx","pages/MovieDetails.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst API_KEY = '7b4562665a42dd00b8be25ed9e213510';\nconst URL_TRENDING = 'https://api.themoviedb.org/3/trending/movie/day?api_key=';\nconst URL_MOVIE = `https://api.themoviedb.org/3/movie/`;\n\nexport const getMoviesListTrending = async () => {\n  const resultData = await axios.get(`${URL_TRENDING}${API_KEY}`);\n\n  return resultData.data.results;\n};\n\nexport const getMovie = async movieId => {\n  const resultData = await axios.get(\n    `${URL_MOVIE}${movieId}?api_key=${API_KEY}`\n  );\n  return resultData.data;\n};\n\nexport const getMovieCredits = async movieId => {\n  const resultData = await axios.get(\n    `${URL_MOVIE}${movieId}/credits?api_key=${API_KEY}`\n  );\n  return resultData.data;\n};\n\nexport const getMovieReviews = async movieId => {\n  const resultData = await axios.get(\n    `${URL_MOVIE}${movieId}/reviews?api_key=${API_KEY}`\n  );\n  return resultData.data.results;\n};\n\nexport const getMoviesList = async query => {\n  const resultData = await axios.get(\n    `https://api.themoviedb.org/3/search/movie?query=${query}&api_key=${API_KEY}`\n  );\n  return resultData.data.results;\n};\n","import PropTypes from 'prop-types';\nimport { BsPersonSquare } from 'react-icons/bs';\n\nconst MovieDescription = ({ movieData }) => {\n  const { genres, title, overview, vote_average, poster_path } = movieData;\n\n  return (\n    <>\n      <div>\n        <div>\n          {poster_path ? (\n            <img\n              src={`https://image.tmdb.org/t/p/w300${poster_path}`}\n              alt=\"Movie poster\"\n            />\n          ) : (\n            <BsPersonSquare style={{ height: 300, width: 200 }} />\n          )}\n        </div>\n        <div>\n          <h2>{title ?? ''}</h2>\n          <p>User score: {Math.round(vote_average * 10) ?? ''}%</p>\n          <div>\n            <p>Overviev</p>\n            <p>{overview ?? ''}</p>\n            <p>{genres.map(({ name }) => name).join(' ') ?? ''}</p>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default MovieDescription;\n\nMovieDescription.propTypes = {\n  movieData: PropTypes.object.isRequired,\n};\n","import { useState, useEffect, useRef, Suspense } from 'react';\nimport { Link, Outlet, useLocation, useParams } from 'react-router-dom';\nimport MovieDescription from 'components/MovieDescrirtion';\nimport { Spinner } from 'components/Loader';\nimport { getMovie } from 'fetchFilmsUtils/fetchFilmData';\n\nconst MovieDetails = () => {\n  const [movie, setMovie] = useState(null);\n  const [error, setError] = useState('');\n  const { movieId } = useParams();\n  const location = useLocation();\n  const backLinkLocation = useRef(location.state?.from ?? '/');\n\n  useEffect(() => {\n    const getMovieData = async () => {\n      try {\n        const movieData = await getMovie(movieId);\n\n        setMovie(movieData);\n      } catch (error) {\n        setError(error);\n      }\n    };\n\n    getMovieData();\n  }, [movieId]);\n\n  return (\n    <>\n      <Link to={backLinkLocation.current}>\n        <button>Go back</button>\n      </Link>\n      {error && <p>Some error occurred</p>}\n      {movie && <MovieDescription movieData={movie} />}\n      <>\n        <ul>\n          <li>\n            <Link to=\"cast\">Cast</Link>\n          </li>\n          <li>\n            <Link to=\"reviews\">Reviews</Link>\n          </li>\n        </ul>\n        <Suspense fallback={<Spinner/>}>\n          <Outlet />\n        </Suspense>\n      </>\n    </>\n  );\n};\n\nexport default MovieDetails;\n"],"names":["API_KEY","URL_MOVIE","getMoviesListTrending","axios","resultData","data","results","getMovie","movieId","getMovieCredits","getMovieReviews","getMoviesList","query","movieData","genres","title","overview","vote_average","poster_path","src","alt","style","height","width","Math","round","map","name","join","useState","movie","setMovie","error","setError","useParams","location","useLocation","backLinkLocation","useRef","state","from","useEffect","getMovieData","to","current","Suspense","fallback"],"sourceRoot":""}