{"version":3,"file":"static/js/597.2967a669.chunk.js","mappings":"yNAgDA,UA5Ca,WACX,OAA8BA,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACA,GAA0BF,EAAAA,EAAAA,UAAS,IAAnC,eAAOG,EAAP,KAAcC,EAAd,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,SAERE,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAc,mCAAG,8GAEOC,EAAAA,EAAAA,IAAgBJ,GAFvB,OAEbK,EAFa,OAGnBR,EAAWQ,GAHQ,gDAKnBN,EAAS,EAAD,IALW,yDAAH,qDAQpBI,GACD,GAAE,CAACH,IAEJ,IAAQM,EAASV,EAATU,KAER,OACE,iCACE,0BACE,wBACGA,GACCA,EAAKC,KAAI,YAA4C,IAAzCC,EAAwC,EAAxCA,KAAMC,EAAkC,EAAlCA,UAAWC,EAAuB,EAAvBA,GAAIC,EAAmB,EAAnBA,aAC/B,OACE,2BACE,0BACE,gBACEC,IAAG,yCAAoCD,GACvCE,IAAI,oBAGR,uBAAIL,KACJ,uCAAeC,OARRC,EAWZ,QAGNZ,IAAS,gDAGf,C,+LC7CKgB,EAAU,mCAEVC,EAAS,sCAEFC,EAAqB,mCAAG,oGACVC,EAAAA,EAAAA,IAAA,UAJN,4DAIM,OAA4BH,IADlB,cAC7BI,EAD6B,yBAG5BA,EAAWC,KAAKC,SAHY,2CAAH,qDAMrBC,EAAQ,mCAAG,WAAMrB,GAAN,uFACGiB,EAAAA,EAAAA,IAAA,UACpBF,GADoB,OACRf,EADQ,oBACWc,IAFd,cAChBI,EADgB,yBAIfA,EAAWC,MAJI,2CAAH,sDAORf,EAAe,mCAAG,WAAMJ,GAAN,uFACJiB,EAAAA,EAAAA,IAAA,UACpBF,GADoB,OACRf,EADQ,4BACmBc,IAFf,cACvBI,EADuB,yBAItBA,EAAWC,MAJW,2CAAH,sDAQfG,EAAe,mCAAG,WAAMtB,GAAN,uFACJiB,EAAAA,EAAAA,IAAA,UACpBF,GADoB,OACRf,EADQ,4BACmBc,IAFf,cACvBI,EADuB,OAI7BK,QAAQC,IAAIN,EAAWC,KAAKC,SAJC,kBAKtBF,EAAWC,KAAKC,SALM,2CAAH,sDAQfK,EAAa,mCAAG,WAAMC,GAAN,uFACFT,EAAAA,EAAAA,IAAA,0DAC4BS,EAD5B,oBAC6CZ,IAF3C,cACrBI,EADqB,yBAIpBA,EAAWC,KAAKC,SAJI,2CAAH,qD","sources":["components/Cast.jsx","fetchFilmsUtils/fetchFilmData.js"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport { getMovieCredits } from '../fetchFilmsUtils/fetchFilmData';\nimport { useParams } from 'react-router-dom';\n\nconst Cast = () => {\n  const [credits, setCredits] = useState([]);\n  const [error, setError] = useState('');\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    const getCreditsData = async () => {\n      try {\n        const creditsData = await getMovieCredits(movieId);\n        setCredits(creditsData);\n      } catch (error) {\n        setError(error);\n      }\n    };\n    getCreditsData();\n  }, [movieId]);\n\n  const { cast } = credits;\n\n  return (\n    <>\n      <div>\n        <ul>\n          {cast &&\n            cast.map(({ name, character, id, profile_path }) => {\n              return (\n                <li key={id}>\n                  <div>\n                    <img\n                      src={`https://image.tmdb.org/t/p/w300${profile_path}`}\n                      alt=\"Movie poster\"\n                    />\n                  </div>\n                  <p>{name}</p>\n                  <p>Character: {character}</p>\n                </li>\n              );\n            })}\n        </ul>\n      </div>\n      {error && <p>Some error occured</p>}\n    </>\n  );\n};\nexport default Cast;\n","import axios from 'axios';\n\nconst API_KEY = '7b4562665a42dd00b8be25ed9e213510';\nconst URL_TRENDING = 'https://api.themoviedb.org/3/trending/movie/day?api_key=';\nconst URL_MOVIE = `https://api.themoviedb.org/3/movie/`;\n\nexport const getMoviesListTrending = async () => {\n  const resultData = await axios.get(`${URL_TRENDING}${API_KEY}`);\n\n  return resultData.data.results;\n};\n\nexport const getMovie = async movieId => {\n  const resultData = await axios.get(\n    `${URL_MOVIE}${movieId}?api_key=${API_KEY}`\n  );\n  return resultData.data;\n};\n\nexport const getMovieCredits = async movieId => {\n  const resultData = await axios.get(\n    `${URL_MOVIE}${movieId}/credits?api_key=${API_KEY}`\n  );\n  return resultData.data;\n};\n\n\nexport const getMovieReviews = async movieId => {\n  const resultData = await axios.get(\n    `${URL_MOVIE}${movieId}/reviews?api_key=${API_KEY}`\n  );\n  console.log(resultData.data.results);\n  return resultData.data.results;\n}\n\nexport const getMoviesList = async query => {\n  const resultData = await axios.get(\n    `https://api.themoviedb.org/3/search/movie?query=${query}&api_key=${API_KEY}`\n  );\n  return resultData.data.results;\n}\n\n"],"names":["useState","credits","setCredits","error","setError","movieId","useParams","useEffect","getCreditsData","getMovieCredits","creditsData","cast","map","name","character","id","profile_path","src","alt","API_KEY","URL_MOVIE","getMoviesListTrending","axios","resultData","data","results","getMovie","getMovieReviews","console","log","getMoviesList","query"],"sourceRoot":""}